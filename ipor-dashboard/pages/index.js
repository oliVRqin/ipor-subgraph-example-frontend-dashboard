import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import TokenABI from '../../contracts/tokens/IpToken.json'
import OracleABI from '../../contracts/oracles/IporOracle.json'
import JosephABI from '../../contracts/amm/pool/Joseph.json'
import { useEffect, useState } from 'react'
import { PieChart } from 'react-minimal-pie-chart';
import LineChart from 'react-linechart';
import Web3 from 'web3';

export default function Home() {
  // this is for Rinkeby, for reference Mainnet address is: wss://mainnet.infura.io/ws/v3/db51ea2d48cd4c7aae46d876b1e1dab3
  let web3 = new Web3(new Web3.providers.WebsocketProvider("wss://rinkeby.infura.io/ws/v3/db51ea2d48cd4c7aae46d876b1e1dab3"));
  
  // token abi stuff
  const [tokenAmount, setTokenAmount] = useState(null);
  
  // oracle abi stuff
  const [oracleStuff, setOracleStuff] = useState(null);

  // joseph abi stuff
  const [josephContent, setJosephContent] = useState(null)

  // log stuff
  const [logState, setLogState] = useState(null)

  useEffect(() => {

    async function fetchJosephStuff() {
      if (typeof web3.eth !== 'undefined') {
        // Token Contract Address
        const tokenContractAddress = "0x70928B27463F9fd6fD84ab2b53966Bcfd335B546";
        // Joseph Contract 
        let josephContract = new web3.eth.Contract(JosephABI, tokenContractAddress);
        // Public Address of Token Holder
        //const randomHolder = "0x82077d15b0b345e9df10bc3f4effc0cf9ba61ff2"
        try {
          const josephStuff = await josephContract.methods.calculateExchangeRate().call()
          setJosephContent(web3.utils.fromWei(josephStuff))
        } catch(err) {
          console.log("errrorrr: ", err)
          return;
        }
      }
    }
    async function fetchOracleStuff() {
      if (typeof web3.eth !== 'undefined') {
        // Token Contract Address
        const tokenContractAddress = "0x1dF7084A1C9905178D539753c066a21E9cCfB90c";
        // Oracle Contract 
        let oracleContract = new web3.eth.Contract(OracleABI, tokenContractAddress);
        // Public Address of Token Holder
        const randomHolder = "0x82077d15b0b345e9df10bc3f4effc0cf9ba61ff2"
        try {
          const oracleStuff = await oracleContract.methods.owner().call()
          setOracleStuff(oracleStuff)
        } catch(err) {
          console.log("errrorrr: ", err)
          return;
        }
      }
    }
    async function fetchTokenHoldings() {
      if (typeof web3.eth !== 'undefined') {
        // Token Contract Address
        const tokenContractAddress = "0xB3fBf885c2713537BcB699be129dfc2Ad2DE84b2";
        // Token Contract 
        let tokenContract = new web3.eth.Contract(TokenABI, tokenContractAddress);
        // Public Address of Token Holder
        const randomHolder = "0x82077d15b0b345e9df10bc3f4effc0cf9ba61ff2"
        try {
          const tokenHoldings = await tokenContract.methods.balanceOf(randomHolder).call()
          setTokenAmount(web3.utils.fromWei(tokenHoldings))
        } catch(err) {
          console.log("errrorrr: ", err)
          return;
        }
      }
    }
    fetchTokenHoldings()
    fetchOracleStuff()
    fetchJosephStuff()
  }, [])

  useEffect(() => {
    async function getLogs() {
      if (typeof web3.eth !== 'undefined') {
        try {
          const logStuff = await web3.eth.getPastLogs({
            fromBlock: web3.utils.toHex("13856597"),
            toBlock: "latest",
            address: "0x70928B27463F9fd6fD84ab2b53966Bcfd335B546",
            topics: ["0x70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be", null]
          })
          console.log(logStuff)
          setLogState(logStuff)
        } catch(err) {
          console.log("errrorrr: ", err)
          return;
        } 
      }
    }
    getLogs()
  }, [])

  const data = [
    {									
        color: "steelblue", 
        points: [{x: 1, y: 2}, {x: 3, y: 5}, {x: 7, y: -3}] 
    }
  ];
 
  return (
    <div className={styles.container}>
      <Head>
        <title>IPOR Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon-ipor.png" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          IPOR Dashboard
        </h1>
        <p>Token Amount: {tokenAmount}</p>
        <p>Oracle Stuff: {oracleStuff}</p>
        <p>Joseph Content: {josephContent}</p>

        <p>Logs</p>
        <p>{logState}</p>
      </main>
      <LineChart width={600}
                        height={400}
                        data={data} />
      <PieChart
        data={[
          { title: 'One', value: 10, color: '#E38627' },
          { title: 'Two', value: 15, color: '#C13C37' },
          { title: 'Three', value: 20, color: '#6A2135' },
        ]}
        radius={10}
      />;
    </div>
  )
}
